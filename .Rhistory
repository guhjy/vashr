fit.test1$df.prior
fit.test1$s0.prior
fit.test1$s2.prior
fit.test1$s2.prior^0.5*fit.test1$stdev.unscaled
(fit.test1$s2.prior^0.5*fit.test1$stdev.unscaled)[1]
vash.test$fitted.g$c
vash.test1$fitted.g$c
vash.test1$fitted.g
ng=500
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,0.2))
lines(sort(vash.test$qvalue)[1:ng],lty=2)
lines((cumsum(d.test$null[o.limma])/(1:10000))[1:ng],col=2)
lines(sort(qvalue(fit.test$p.value)$qval)[1:ng],lty=2,col=2)
ng=2000
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,0.2))
lines(sort(vash.test$qvalue)[1:ng],lty=2)
lines((cumsum(d.test$null[o.limma])/(1:10000))[1:ng],col=2)
lines(sort(qvalue(fit.test$p.value)$qval)[1:ng],lty=2,col=2)
ng=3000
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,0.2))
lines(sort(vash.test$qvalue)[1:ng],lty=2)
lines((cumsum(d.test$null[o.limma])/(1:10000))[1:ng],col=2)
lines(sort(qvalue(fit.test$p.value)$qval)[1:ng],lty=2,col=2)
ng=10000
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,0.2))
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,1))
lines(sort(vash.test$qvalue)[1:ng],lty=2)
lines((cumsum(d.test$null[o.limma])/(1:10000))[1:ng],col=2)
lines(sort(qvalue(fit.test$p.value)$qval)[1:ng],lty=2,col=2)
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,1))
lines(sort(vash.test$qvalue)[1:ng],lty=2)
lines((cumsum(d.test$null[o.limma])/(1:10000))[1:ng],col=2)
lines(sort(qvalue(fit.test$p.value)$qval)[1:ng],lty=2,col=2)
d.test=sim(N=10000,Nnull=5000,altmean=0,altsd=3,df=5,pi=c(0.3,0.4,0.3),alpha=c(2,10,20),c=1)
ptm <- proc.time()
vash.test=vash(d.test$sebetahat,df=5,d.test$betahat)
vash.test1=vash(d.test$sebetahat,df=5,d.test$betahat,singlecomp=TRUE)
proc.time() - ptm
fit.test <- lmFit(d.test$Y, rep(1,dim(d.test$Y)[2]))
fit.test <- eBayes(fit.test)
fit.test = eBayes(fit.test,robust=TRUE)
fit.test1 <- lmFit(d.test$Y, rep(1,dim(d.test$Y)[2]))
fit.test1 <- eBayes(fit.test1)
fit.test1 = eBayes(fit.test1)
mean((log(d.test$truese)-log(vash.test$PosteriorMean))^2)
mean((log(d.test$truese)-log(vash.test1$PosteriorMean))^2)
mean((log(d.test$truese)-log(fit.test$s2.post^0.5*fit.test$stdev.unscaled))^2)
mean((log(d.test$truese)-log(fit.test1$s2.post^0.5*fit.test1$stdev.unscaled))^2)
plot(log(d.test$truese),log(vash.test$PosteriorMean))
points(log(d.test$truese),log(fit.test$s2.post^0.5*fit.test$stdev.unscaled),col=2)
plot(log(vash.test$PosteriorMean),log(fit.test$s2.post^0.5*fit.test$stdev.unscaled))
abline(0,1)
(fit.test1$s2.prior^0.5*fit.test1$stdev.unscaled)[1]
vash.test$fitted.g$c
o.vash = order(vash.test$qvalue)
o.limma = order(qvalue(fit.test$p.value)$qval)
ng=10000
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,1))
lines(sort(vash.test$qvalue)[1:ng],lty=3)
lines((cumsum(d.test$null[o.limma])/(1:10000))[1:ng],col=2)
lines(sort(qvalue(fit.test$p.value)$qval)[1:ng],lty=3,col=2)
ng=2000
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,1))
lines(sort(vash.test$qvalue)[1:ng],lty=3)
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,0.2))
lines(sort(vash.test$qvalue)[1:ng],lty=3)
lines((cumsum(d.test$null[o.limma])/(1:10000))[1:ng],col=2)
lines(sort(qvalue(fit.test$p.value)$qval)[1:ng],lty=3,col=2)
d.test=sim(N=10000,Nnull=5000,altmean=0,altsd=3,df=5,pi=c(0.3,0.4,0.2,0.1),alpha=c(2,5,10,20),c=0.5)
ptm <- proc.time()
vash.test=vash(d.test$sebetahat,df=5,d.test$betahat)
vash.test1=vash(d.test$sebetahat,df=5,d.test$betahat,singlecomp=TRUE)
proc.time() - ptm
fit.test <- lmFit(d.test$Y, rep(1,dim(d.test$Y)[2]))
fit.test <- eBayes(fit.test)
fit.test = eBayes(fit.test,robust=TRUE)
fit.test1 <- lmFit(d.test$Y, rep(1,dim(d.test$Y)[2]))
fit.test1 <- eBayes(fit.test1)
fit.test1 = eBayes(fit.test1)
mean((log(d.test$truese)-log(vash.test$PosteriorMean))^2)
mean((log(d.test$truese)-log(vash.test1$PosteriorMean))^2)
mean((log(d.test$truese)-log(fit.test$s2.post^0.5*fit.test$stdev.unscaled))^2)
mean((log(d.test$truese)-log(fit.test1$s2.post^0.5*fit.test1$stdev.unscaled))^2)
plot(log(d.test$truese),log(vash.test$PosteriorMean))
points(log(d.test$truese),log(fit.test$s2.post^0.5*fit.test$stdev.unscaled),col=2)
plot(log(vash.test$PosteriorMean),log(fit.test$s2.post^0.5*fit.test$stdev.unscaled))
abline(0,1)
(fit.test1$s2.prior^0.5*fit.test1$stdev.unscaled)[1]
vash.test$fitted.g$c
o.vash = order(vash.test$qvalue)
o.limma = order(qvalue(fit.test$p.value)$qval)
ng=2000
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,0.2))
lines(sort(vash.test$qvalue)[1:ng],lty=3)
lines((cumsum(d.test$null[o.limma])/(1:10000))[1:ng],col=2)
lines(sort(qvalue(fit.test$p.value)$qval)[1:ng],lty=3,col=2)
ng=3000
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,0.2))
lines(sort(vash.test$qvalue)[1:ng],lty=3)
lines((cumsum(d.test$null[o.limma])/(1:10000))[1:ng],col=2)
lines(sort(qvalue(fit.test$p.value)$qval)[1:ng],lty=3,col=2)
load("/Volumes/PERSONAL/MS/myvash/Simulations/test.RData")
?igmix
g = igmix(pi=c(0.3,0.4,0.2,0.1),alpha=c(2,5,10,20),beta=0.5*(c(2,5,10,20)+1))
?vash
vash.test=vash(d.test$sebetahat,df=5,d.test$betahat,g=g)
d.test=sim(N=10000,Nnull=5000,altmean=0,altsd=3,df=5,pi=c(0.3,0.4,0.2,0.1),alpha=c(2,5,10,20),c=0.5)
vash.test=vash(d.test$sebetahat,df=5,d.test$betahat,g=g)
detach("package:vash", unload=TRUE)
library("vash", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
vash.test=vash(d.test$sebetahat,df=5,d.test$betahat,g=g)
source('/Volumes/PERSONAL/MS/myvash/package/vash/R/vash.R')
vash.test=vash(sehat=d.test$sebetahat,df=5,sebetahat=d.test$betahat,g=g)
vash.test=vash(sehat=d.test$sebetahat,df=5,betahat=d.test$betahat,g=g)
source('/Volumes/PERSONAL/MS/myvash/package/vash/R/vash.R')
vash.test=vash(sehat=d.test$sebetahat,df=5,betahat=d.test$betahat,g=g)
vash.test$fitted.g
vash.test$fit$niter
source('/Volumes/PERSONAL/MS/myvash/package/vash/R/vash.R')
vash.test=vash(sehat=d.test$sebetahat,df=5,betahat=d.test$betahat,g=g)
vash.test
vash.test$fitted.g
vash.test$fit$niter
vash.test1=vash(d.test$sebetahat,df=5,d.test$betahat,singlecomp=TRUE)
fit.test <- lmFit(d.test$Y, rep(1,dim(d.test$Y)[2]))
fit.test <- eBayes(fit.test)
fit.test = eBayes(fit.test,robust=TRUE)
fit.test1 <- lmFit(d.test$Y, rep(1,dim(d.test$Y)[2]))
fit.test1 <- eBayes(fit.test1)
fit.test1 = eBayes(fit.test1)
mean((log(d.test$truese)-log(vash.test$PosteriorMean))^2)
mean((log(d.test$truese)-log(vash.test1$PosteriorMean))^2)
mean((log(d.test$truese)-log(fit.test$s2.post^0.5*fit.test$stdev.unscaled))^2)
mean((log(d.test$truese)-log(fit.test1$s2.post^0.5*fit.test1$stdev.unscaled))^2)
plot(log(d.test$truese),log(vash.test$PosteriorMean))
points(log(d.test$truese),log(fit.test$s2.post^0.5*fit.test$stdev.unscaled),col=2)
plot(log(vash.test$PosteriorMean),log(fit.test$s2.post^0.5*fit.test$stdev.unscaled))
abline(0,1)
o.vash = order(vash.test$qvalue)
o.limma = order(qvalue(fit.test$p.value)$qval)
ng=3000
plot((cumsum(d.test$null[o.vash])/(1:10000))[1:ng],type='l',ylim=c(0,0.2))
lines(sort(vash.test$qvalue)[1:ng],lty=3)
lines((cumsum(d.test$null[o.limma])/(1:10000))[1:ng],col=2)
lines(sort(qvalue(fit.test$p.value)$qval)[1:ng],lty=3,col=2)
vash.test$fitted.g
vash.test=vash(sehat=d.test$sebetahat,df=5,betahat=d.test$betahat)
vash.test$fitted.g
mean((log(d.test$truese)-log(vash.test$PosteriorMean))^2)
detach("package:vash", unload=TRUE)
library("vash", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
load("/Volumes/PERSONAL/MS/myvash/Simulations/test.RData")
d.test=sim(N=10000,Nnull=5000,altmean=0,altsd=3,df=5,pi=c(0.3,0.4,0.2,0.1),alpha=c(2,5,10,20),c=0.5)
g = igmix(pi=c(0.3,0.4,0.2,0.1),alpha=c(2,5,10,20),beta=0.5*(c(2,5,10,20)+1))
vash.test=vash(sehat=d.test$sebetahat,df=5,betahat=d.test$betahat)
vash.test2=vash(sehat=d.test$sebetahat,df=5,betahat=d.test$betahat,g=g)
vash.test1=vash(d.test$sebetahat,df=5,d.test$betahat,singlecomp=TRUE)
boxplot(mse~group,data=test.5$allmse)
ng=100
plot(apply(test.5$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.5$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.5$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.5$fdr.limma.s,2,mean)[1:ng],col='green')
legend('topleft',col=c('black','red','blue','green'),lty=rep(1,4),
legend=c('vash','vash.s','limma.rob','limma'))
plot(apply(test.5$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.5$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.5$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.5$fdr.limma.s,2,mean)[1:ng],col='green')
ng=300
plot(apply(test.5$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.5$fdr.vash.s,2,mean)[1:ng],col='red')
ng=200
plot(apply(test.5$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.5$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.5$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.5$fdr.limma.s,2,mean)[1:ng],col='green')
legend('topleft',col=c('black','red','blue','green'),lty=rep(1,4),
legend=c('vash','vash.s','limma.rob','limma'))
title('True FDR')
boxplot(mse~group,data=test.6$allmse)
boxplot(mse~group,data=test.4$allmse)
boxplot(mse~group,data=test.3$allmse)
boxplot(mse~group,data=test.8$allmse)
boxplot(mse~group,data=test.9$allmse)
boxplot(mse~group,data=test.10$allmse)
boxplot(mse~group,data=test.11$allmse)
ng=100
plot(apply(test.11$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.11$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.11$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.11$fdr.limma.s,2,mean)[1:ng],col='green')
plot(apply(test.12$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.12$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.12$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.12$fdr.limma.s,2,mean)[1:ng],col='green')
boxplot(mse~group,data=test.13$allmse)
boxplot(mse~group,data=test.14$allmse)
ng=100
plot(apply(test.14$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.14$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.14$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.14$fdr.limma.s,2,mean)[1:ng],col='green')
plot(apply(test.14$qval.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.14$qval.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.14$qval.limma,2,mean)[1:ng],col='blue')
lines(apply(test.14$qval.limma.s,2,mean)[1:ng],col='green')
title('Estimated FDR')
boxplot(mse~group,data=test.15$allmse)
# True FDR
ng=100
plot(apply(test.15$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.15$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.15$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.15$fdr.limma.s,2,mean)[1:ng],col='green')
title('True FDR')
boxplot(mse~group,data=test.16$allmse)
# True FDR
ng=100
plot(apply(test.16$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.16$fdr.vash.s,2,mean)[1:ng],col='red')
ng=50
plot(apply(test.16$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.16$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.16$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.16$fdr.limma.s,2,mean)[1:ng],col='green')
boxplot(mse~group,data=test.17$allmse)
ng=100
plot(apply(test.17$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.17$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.17$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.17$fdr.limma.s,2,mean)[1:ng],col='green')
ng=300
plot(apply(test.17$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.17$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.17$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.17$fdr.limma.s,2,mean)[1:ng],col='green')
boxplot(mse~group,data=test.18$allmse)
# True FDR
ng=100
plot(apply(test.18$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.18$fdr.vash.s,2,mean)[1:ng],col='red')
ng=700
plot(apply(test.18$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
ng=500
plot(apply(test.18$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.18$fdr.vash.s,2,mean)[1:ng],col='red')
ng=400
plot(apply(test.18$fdr.vash,2,mean)[1:ng],type='l',ylim=c(0,0.2))
lines(apply(test.18$fdr.vash.s,2,mean)[1:ng],col='red')
lines(apply(test.18$fdr.limma,2,mean)[1:ng],col='blue')
lines(apply(test.18$fdr.limma.s,2,mean)[1:ng],col='green')
fit.test <- lmFit(d.test$Y, rep(1,dim(d.test$Y)[2]))
fit.test <- eBayes(fit.test)
fit.test = eBayes(fit.test,robust=TRUE)
fit.test1 <- lmFit(d.test$Y, rep(1,dim(d.test$Y)[2]))
fit.test1 <- eBayes(fit.test1)
fit.test1 = eBayes(fit.test1)
mean((log(d.test$truese)-log(vash.test$PosteriorMean))^2)
mean((log(d.test$truese)-log(vash.test1$PosteriorMean))^2)
mean((log(d.test$truese)-log(fit.test$s2.post^0.5*fit.test$stdev.unscaled))^2)
mean((log(d.test$truese)-log(fit.test1$s2.post^0.5*fit.test1$stdev.unscaled))^2)
plot(log(d.test$truese),log(vash.test$PosteriorMean))
points(log(d.test$truese),log(fit.test$s2.post^0.5*fit.test$stdev.unscaled),col=2)
plot(log(vash.test$PosteriorMean),log(fit.test$s2.post^0.5*fit.test$stdev.unscaled))
boxplot(mse~group,data=test.18$allmse)
boxplot(mse~group,data=test.11$allmse)
mean(d.test$truese-vash.test$PosteriorMean)^2)
mean((d.test$truese^2-vash.test$PosteriorMean^2)^2)
mean((d.test$truese)^2-(fit.test$s2.post^0.5*fit.test$stdev.unscaled)^2)^2)
mean((d.test$truese)^2-(fit.test$s2.post^0.5*fit.test$stdev.unscaled)^2)^2
mean(((d.test$truese)^2-(fit.test$s2.post^0.5*fit.test$stdev.unscaled)^2)^2)
mean((d.test$truese^2-(fit.test$s2.post^0.5*fit.test$stdev.unscaled)^2)^2)
mean((d.test$truese^2-vash.test$PosteriorMean^2)^2)
d.test=sim(N=10000,Nnull=10000,altmean=0,altsd=3,df=5,pi=c(0.3,0.4,0.2,0.1),alpha=c(2,5,10,20),c=0.5)
vash.test2=vash(sehat=d.test$sebetahat,df=5,betahat=d.test$betahat,g=g)
hist(vash.test2$pvalue)
library("vash", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(vash)
library(limma)
library(qvalue)
sim=function(N,Nnull,altmean,altsd,df,pi,alpha,c,unimodal='variance'){
n=df
K=length(pi)
ind=t(rmultinom(N, 1, pi))
if(unimodal=='variance'){
modalpha=alpha+1
truevar=1/rgamma(N*K,shape=rep(alpha,each=N),rate=rep(modalpha*c,each=N))
truevar=apply(ind*matrix(truevar,ncol=K),1,sum)
}else if(unimodal=='precision'){
modalpha=alpha-1
truevar=1/rgamma(N*K,shape=rep(alpha,each=N),rate=rep(modalpha*c,each=N))
truevar=apply(ind*matrix(truevar,ncol=K),1,sum)
}
null = c(rep(1, Nnull), rep(0, N - Nnull))
truemean = c(rep(0,Nnull),rnorm(N-Nnull,mean=altmean,sd=altsd))
truese = sqrt(truevar)
Y=matrix(rnorm(N*(n+1),mean=rep(truemean,n+1),sd=rep(sqrt(truevar*(n+1)),n+1)),ncol=n+1)
sebetahat=sqrt(apply(Y,1,var)/(n+1))
betahat=apply(Y,1,mean)
#   Y=NULL
#   sebetahat=sqrt(rgamma(N,shape=n/2,rate=n/(2*truevar)))
#   betahat=rnorm(N,mean=truemean,sd=truese)
return(list(truemean=truemean,truese=truese,betahat=betahat,sebetahat=sebetahat,
Y=Y,ind=ind,n=n,alpha=alpha,modalpha=modalpha,c=c,pi=pi,null=null))
}
allsim=function(nsim,N,Nnull,altmean,altsd,df,pi,alpha,c,unimodal='variance'){
mse.raw=rep(NA,nsim)
mse.vash=rep(NA,nsim)
mse.vash.s=rep(NA,nsim)
mse.limma=rep(NA,nsim)
mse.limma.s=rep(NA,nsim)
qval.vash=matrix(rep(NA,nsim*N),nrow=nsim)
qval.vash.s=matrix(rep(NA,nsim*N),nrow=nsim)
qval.limma=matrix(rep(NA,nsim*N),nrow=nsim)
qval.limma.s=matrix(rep(NA,nsim*N),nrow=nsim)
fdr.vash=matrix(rep(NA,nsim*N),nrow=nsim)
fdr.vash.s=matrix(rep(NA,nsim*N),nrow=nsim)
fdr.limma=matrix(rep(NA,nsim*N),nrow=nsim)
fdr.limma.s=matrix(rep(NA,nsim*N),nrow=nsim)
for (i in 1:nsim){
d = sim(N,Nnull,altmean,altsd,df,pi,alpha,c,unimodal='variance')
vash.s=vash(d$sebetahat,df=df,d$betahat,singlecomp=TRUE)
vash=vash(d$sebetahat,df=df,d$betahat,singlecomp=FALSE)
fit.s <- lmFit(d$Y, rep(1,dim(d$Y)[2]))
fit.s <- eBayes(fit.s)
fit = eBayes(fit.s,robust=TRUE)
mse.raw[i]=mean((d$truese^2-d$sebetaht^2)^2)
mse.vash[i]=mean((d$truese^2-vash$PosteriorMean^2)^2)
mse.vash.s[i]=mean((d$truese^2-vash.s$PosteriorMean^2)^2)
mse.limma[i]=mean((d$truese^2-fit$s2.post*fit$stdev.unscaled^2)^2)
mse.limma.s[i]=mean((d$truese^2-fit.s$s2.post*fit.s$stdev.unscaled^2)^2)
qval.vash[i,]=qvalue(vash$pvalue)$qval
qval.vash.s[i,]=qvalue(vash.s$pvalue)$qval
qval.limma[i,]=qvalue(fit$p.value)$qval
qval.limma.s[i,]=qvalue(fit.s$p.value)$qval
o.vash = order(qval.vash[i,])
o.vashs = order(qval.vash.s[i,])
o.limma = order(qval.limma[i,])
o.limmas = order(qval.limma.s[i,])
qval.vash[i,]=sort(qval.vash[i,])
qval.vash.s[i,]=sort(qval.vash.s[i,])
qval.limma[i,]=sort(qval.limma[i,])
qval.limma.s[i,]=sort(qval.limma.s[i,])
fdr.vash[i,]=(cumsum(d$null[o.vash])/(1:N))
fdr.vash.s[i,]=(cumsum(d$null[o.vashs])/(1:N))
fdr.limma[i,]=(cumsum(d$null[o.limma])/(1:N))
fdr.limma.s[i,]=(cumsum(d$null[o.limmas])/(1:N))
}
group=rep(c("vash","limma","limma.robust","no-shrink"),each=nsim)
mse=c(mse.vash,mse.limma.s,mse.limma,mse.raw)
allmse=data.frame(mse,group)
return(list(allmse=allmse,
qval.vash=qval.vash,
qval.vash.s=qval.vash.s,
qval.limma=qval.limma,
qval.limma.s=qval.limma.s,
fdr.vash=fdr.vash,
fdr.vash.s=fdr.vash.s,
fdr.limma=fdr.limma,
fdr.limma.s=fdr.limma.s))
}
set.seed(88)
ptm <- proc.time()
test.1=allsim(nsim=50,N=10000,Nnull=9000,altmean=0,altsd=2,df=10,pi=1,alpha=5,c=1)
install.packages("/Volumes/PERSONAL/MS/myvash/package/vash_0.1.tar.gz",repos=NULL,type="source")
source('/Volumes/PERSONAL/MS/myvash/package/vash/R/vash.R')
install.packages("/Volumes/PERSONAL/MS/myvash/package/vash_0.1.tar.gz",repos=NULL,type="source")
install.packages("/Volumes/PERSONAL/MS/myvash/package/vash_0.1.tar.gz",repos=NULL,type="source")
install.packages("/Volumes/PERSONAL/MS/myvash/package/vash_0.1.tar.gz",repos=NULL,type="source")
source('/Volumes/PERSONAL/MS/myvash/package/vash/R/vash.R')
aaa=readRDS("/Volumes//PERSONAL/MS/dscr-gtex-break-diff-top10000/dsc-gtex-files/input/Adipose-Subcutaneous,Lung,2vs2//default_input//input.1.rds")
sebetahat=aaa$sebetahat.RUVqb
test=vash(sebetahat,df=1,singlecomp=TRUE)
library("ashr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
test=vash(sebetahat,df=1,singlecomp=TRUE)
test=vash(sebetahat,df=1,singlecomp=TRUE)
library(vash)
test=vash(sebetahat,df=1,singlecomp=TRUE)
alpha.vec
mm=momentm(sehat,1)
mm
mm=momentm(sehat,2)
mm
test=vash(sebetahat,df=1,singlecomp=TRUE)
c.init
alpha.vec=1
params.init=c(log(c.init),log(alpha.vec))
res=optim(params.init,loglike.se.ac,gr=gradloglike.se.ac,method='L-BFGS-B',
lower=c(NA,0), upper=c(NA,log(100)),
n=n,k=1,v=v,sehat=sehat,pi=pi,unimodal=unimodal,
control=list(maxit=maxiter,pgtol=tol))
res
debugSource('/Volumes/PERSONAL/MS/myvash/package/vash/R/vash.R')
test=vash(sebetahat,df=1,singlecomp=TRUE)
params.init
res=optim(params.init,loglike.se.ac,gr=gradloglike.se.ac,method='L-BFGS-B',
lower=c(NA,0), upper=c(NA,log(100)),
n=n,k=1,v=v,sehat=sehat,pi=pi,unimodal=unimodal,
control=list(maxit=maxiter,pgtol=tol))
res
detach("package:vash", unload=TRUE)
install.packages("/Volumes/PERSONAL/MS/myvash/package/vash_0.1.tar.gz",repos=NULL,type="source")
aaa=readRDS("/Volumes/PERSONAL/MS/dscr-gtex-break-top10000/dsc-gtex-files/input/Adipose-Subcutaneous,2vs2/default_input//input.1.rds")
sebetahat=aaa$sebetahat.Myrnaqb
hist(sebetahat)
summary(sebetahat)
test=vash(sebetahat,df=1)
library("vash", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
test=vash(sebetahat,df=1)
library(vash)
test=vash(sebetahat,df=1)
mm
test=vash(sebetahat,df=1)
test=vash(sebetahat,df=1)
c.init
library(vash)
test=vash(sebetahat,df=1)
library(vash)
test=vash(sebetahat,df=1)
library(vash)
test=vash(sebetahat,df=1)
c.init
library(vash)
test=vash(sebetahat,df=1)
library(vash)
test=vash(sebetahat,df=1)
summary(test$qvalue)
summary(test$PosteriorMean)
summary(sebetahat)
test$fitted.g
test2=vash(sebetahat,df=2)
test2$fitted.g
install.packages("/Volumes/PERSONAL/MS/myvash/package/vash_0.1.tar.gz",repos=NULL,type="source")
install.packages("/Volumes/PERSONAL/MS/myvash/package/vash_0.1.tar.gz",repos=NULL,type="source")
devtools::use_vignette("my-vignette")
library(devtools)
install_github("mengyin/vashr")
browseVignettes("vash")
dscr::update_makefile
install_github("mengyin/vashr")
library("vash", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
browseVignettes("vash")
dscr::update_makefile
detach("package:vash", unload=TRUE)
install.packages("/Volumes/PERSONAL/MS/myvash/package/vash_0.1.tar.gz",repos=NULL,type="source")
browseVignettes("vash")
install_github("mengyin/vashr")
browseVignettes("vash")
install_github("mengyin/vashr")
browseVignettes("vash")
install.packages("/Volumes/PERSONAL/MS/myvash/package/vash_0.1.tar.gz",repos=NULL,type="source")
browseVignettes("vash")
install_github("mengyin/vashr")
browseVignettes("vash")
library(vash)
browseVignettes("vash")
devtools::load_all("vash")
devtools::load_all(vash)
getwd()
dir(package:vash)
ls(package:vash)
devtools::build_vignettes()
install_github("mengyin/vashr")
browseVignettes("vash")
?vash
library(vash)
?vash
1-pnorm(2.067)
source('/Volumes/PERSONAL/MS/myvash/package/vash/R/vash.R')
aaa=readRDS("/Volumes//PERSONAL/MS/dscr-gtex-break-top10000/dsc-gtex-files/input/Adipose-Subcutaneous,2vs2/default_input//input.1.rds")
sebetahat=aaa$sebetahat.edgeRglm
summary(sebetahat)
mm=momentm(sebetahat,2)
order(sebetahat)
order(sebetahat)[1]
sebetahat[9989]
sebetahat[9989]=1e-6
mm=momentm(sebetahat,2)
vvv=vash(sebetahat,2)
library(vash)
vvv=vash(sebetahat,2)
summary(vvv$qvalue)
vvv
vvv$PosteriorMean[1:10]
sebetahat[1:10]
sum(aaa$sebetahat.edgeRglm==0)
sum(aaa$sebetahat.DESeqglm==0)
min(aaa$sebetahat.edgeRglm[aaa$sebetahat.edgeRglm>0])
aaa=readRDS("/Volumes//PERSONAL/MS/dscr-gtex-poisthin-top10000/dsc-gtex-files/input/Adipose-Subcutaneous,50vs50/default_input//input.1.rds")
betahat=aaa$betahat.edgeRglm
sebetahat = aaa$sebetahat.edgeRglm
summary(betahat)
summary(sebetahat)
source('/Volumes/PERSONAL/MS/myvash/package/vash/R/vash.R')
aaa$df.edgeRglm
test=vash(sebetahat,df=98)
source("mix.R")
library(ashr)
test=vash(sebetahat,df=98)
test$fitted.g
hist(sebetahat)
va=test
sebetahat.new = c(sqrt(va$PosteriorRate/va$PosteriorShape))
hist(sebetahat.new)
summary(sebetahat.new)
df.new = 2*va$PosteriorShape[1]
df.new
fit = ash(betahat,sebetahat.new,df=df.new,
method="fdr",mixcompdist=args$mixcompdist)
fit = ash(betahat,sebetahat.new,df=df.new,
method="fdr",mixcompdist="uniform")
